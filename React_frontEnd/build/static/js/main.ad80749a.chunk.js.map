{"version":3,"sources":["components/HomePage_components/host.js","components/HomePage_components/join.js","components/GameStart_components/GamePlay.js","components/GameStart_components/GameHost.js","components/GameStart_components/TheGame.js","components/WaitingPage_components/addMoney.js","components/WaitingPage_components/HostWaiting.js","components/WaitingPage_components/PlayerWaiting.js","App.js","index.js"],"names":["Host","props","className","onClick","Hosted","Join","useState","enteredCode","setEnteredCode","type","onBlur","event","target","value","preventDefault","console","log","Joined","GamePlay","GameHost","TheGame","ishost","AddMoney","addMoney","setAddMoney","money","setMoney","player","name","placeholder","parseInt","HostWaiting","roomid","gameCode","gameStarted","setGameStarted","bal","map","PlayerWaiting","balance","App","setGameCode","localStorage","getItem","userName","setUserName","isHost","setIsHost","isError","setIsError","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad80749a.chunk.js","sourcesContent":["import \"./style.css\";\r\nconst Host = (props) => {\r\n  const hostingClickHandler = () => {\r\n    props.Hosted();\r\n  };\r\n  return (\r\n    <div className=\"parts\">\r\n      <div>Host a Game</div>\r\n      <button onClick={hostingClickHandler}>Host</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Host;\r\n","import \"./style.css\";\r\nimport { useState } from \"react\";\r\nconst Join = (props) => {\r\n  const [enteredCode, setEnteredCode] = useState(\"\");\r\n  const enteredCodeHandler = (event) => {\r\n    setEnteredCode(event.target.value);\r\n  };\r\n  const joiningClickHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(enteredCode);\r\n\r\n    //check if such a code does not exist in node.js maintained codeArray\r\n    // replace the condition with false\r\n\r\n    false ? props.Joined(\"ERROR\") : props.Joined(enteredCode);\r\n  };\r\n  return (\r\n    <div className=\"parts\">\r\n      <div>Join a Game</div>\r\n      <div>Enter Room Id</div>\r\n      <form>\r\n        <input type=\"text\" onBlur={enteredCodeHandler}></input>\r\n        <button onClick={joiningClickHandler}>Join</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","const GamePlay = () => {\r\n  const tableBal = 500;\r\n  const myBal = 300;\r\n  return (\r\n    <div>\r\n      <div>Table Balance</div>\r\n      <div>{tableBal}</div>\r\n      <div>My Balance</div>\r\n      <div>{myBal}</div>\r\n      <form>\r\n        <input type=\"number\" />\r\n      </form>\r\n      <button>Add to table</button>\r\n    </div>\r\n  );\r\n};\r\nexport default GamePlay;\r\n","const GameHost = () => {\r\n  return <div>\r\n      <button>End Round</button>\r\n      <button>End Game and Generate a Summary</button>\r\n  </div>;\r\n};\r\nexport default GameHost;\r\n","import GamePlay from \"./GamePlay\";\r\nimport GameHost from \"./GameHost\";\r\nconst TheGame = (props) => {\r\n  return (\r\n    <div>\r\n     {props.ishost && <GameHost />}\r\n      <GamePlay />\r\n    </div>\r\n  );\r\n};\r\nexport default TheGame;\r\n","import { useState } from \"react\";\r\nconst AddMoney = (props) => {\r\n  const [addMoney, setAddMoney] = useState(0);\r\n  const [money, setMoney] = useState(0);\r\n  const moneyHandler = (event) => {\r\n    setMoney(event.target.value);\r\n  };\r\n  const addHandler = (bal) => {\r\n    setAddMoney(parseInt(bal) + parseInt(money));\r\n  };\r\n  // socket emit the balance {addMoney} to the particular player\r\n  return (\r\n    <div className=\"flex\">\r\n      {props.player.name}\r\n      <form>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"enter amount\"\r\n          onBlur={moneyHandler}\r\n        ></input>\r\n      </form>\r\n      <button onClick={() => addHandler(addMoney)}>add</button>\r\n      Current Bal : {addMoney}\r\n    </div>\r\n  );\r\n};\r\nexport default AddMoney;\r\n","import { useState } from \"react\";\r\nimport TheGame from \"../GameStart_components/TheGame\";\r\nimport \"./style.css\";\r\nimport AddMoney from \"./addMoney\";\r\nconst HostWaiting = (props) => {\r\n  const roomid = props.gameCode;\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const startGameHandler = () => {\r\n    setGameStarted(true);\r\n  };\r\n  // do something about getting every users name from sockets and then display\r\n  // currently using a dummy playerNames list\r\n  // also how to update balance on each player after clicking add\r\n\r\n  const playerNames = [\r\n    { name: \"pranav\", bal: 0 },\r\n    { name: \"dhairya\", bal: 0 },\r\n    { name: \"dhananjay\", bal: 0 },\r\n  ];\r\n  return (\r\n    <div className=\"parts\">\r\n      {!gameStarted && (\r\n        <div>\r\n          <div>Room Created Sucessfully</div>\r\n          <div>\r\n            <button onClick={startGameHandler}>Start the Game</button>\r\n          </div>\r\n          <div>Game ID: {roomid}</div>\r\n          <div>Share this with your friends</div>\r\n          <div>Player List in lobby</div>\r\n          <div>\r\n            {playerNames.map((player) => (\r\n              <AddMoney player={player} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {gameStarted && <TheGame ishost={props.ishost} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HostWaiting;\r\n","import { useState } from \"react\";\r\nimport TheGame from \"../GameStart_components/TheGame\";\r\nimport \"./style.css\";\r\nconst PlayerWaiting = (props) => {\r\n  const [balance, setBalance] = useState(0);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n\r\n  // do something which gets the balance from socket and call balanceHandler\r\n\r\n  const balanceHandler = (bal) => {\r\n    setBalance(bal);\r\n  };\r\n\r\n  // do something which calls the gameStartedHandler once host clicks on Start Game\r\n\r\n  const gameStartedHandler = () => {\r\n    setGameStarted(true);\r\n  };\r\n  const roomid = props.gameCode;\r\n  return (\r\n    <div>\r\n      {!gameStarted && (\r\n        <div>\r\n          <div> Game ID: {roomid} </div>\r\n          <div>Share this code with your friends</div>\r\n          <div>My Balance :{balance}</div>\r\n          <div>Waiting for host to start the game</div>\r\n        </div>\r\n      )}\r\n      {gameStarted && <TheGame />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerWaiting;\r\n","// import { io } from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Host from \"./components/HomePage_components/host\";\nimport Join from \"./components/HomePage_components/join\";\nimport HostWaiting from \"./components/WaitingPage_components/HostWaiting\";\nimport PlayerWaiting from \"./components/WaitingPage_components/PlayerWaiting\";\n\nfunction App() {\n  const [gameCode, setGameCode] = useState(null);\n  const [userName, setUserName] = useState(localStorage.getItem(\"name\"));\n  const [isHost, setIsHost] = useState(false);\n  const [isError, setIsError] = useState(false);\n  {\n    // const socket = io(\"http://localhost:5000\");\n    // socket.on(\"connect\", () => {\n    //   console.log(socket.id);\n    // });\n    // socket.on(\"rec\", (number) => {\n    //   console.log(number);\n    // });\n    // socket.emit(\"custom-event\", 10);\n    // socket.emit('join-room','hello')\n  }\n  const userNameHandler = (event) => {\n    setUserName(event.target.value);\n  };\n  const joiningHandler = (enteredCode) => {\n    localStorage.setItem(\"name\", userName);\n    enteredCode !== \"ERROR\" && setGameCode(enteredCode);\n    enteredCode === \"ERROR\" && setIsError(true);\n  };\n\n  const hostingHandler = () => {\n    setIsHost(true);\n    localStorage.setItem(\"name\", userName);\n    //write code for connection with socket,,, socket returns socket.id and room code\n    //push that code in node.js maintained codeArray\n    //also enter the host to the room created\n    // right now taking dummy value of code\n    setGameCode(\"AWQS\");\n  };\n  return (\n    <div className=\"parts\">\n      {gameCode === null ? (\n        <div>\n          <form>\n            <input\n              type=\"text\"\n              placeholder={userName}\n              onBlur={userNameHandler}\n            ></input>\n          </form>\n          <Host Hosted={hostingHandler} />\n          <Join Joined={joiningHandler} />\n          {isError && <p>Game Not Found!! Try Again</p>}\n        </div>\n      ) : (\n        <div>\n          <p>My Name: {userName} </p>\n          {isHost ? (\n            <HostWaiting gameCode={gameCode} ishost={isHost} />\n          ) : (\n            <PlayerWaiting gameCode={gameCode} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}